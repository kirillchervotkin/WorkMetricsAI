import { Context } from "grammy";
import { DataProcessor } from "../services/DataProcessor";
import { geminiService } from "../services/gemini";

/**
 * –ü–†–û–°–¢–û–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –ó–ê–ü–†–û–°–û–í
 * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –î–û ‚Üí –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ LLM ‚Üí –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç
 */
export async function handleQuery(ctx: Context) {
  if (!ctx.message?.text) return;

  const userQuery = ctx.message.text;

  try {
    await ctx.replyWithChatAction("typing");
    console.log(`üìù –ó–∞–ø—Ä–æ—Å: "${userQuery}"`);

    // –ü–æ–ª—É—á–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –î–û
    const processor = new DataProcessor();
    const processedData = await processor.processQueryData(userQuery);
    
    console.log("üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", processedData.summary);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ LLM –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    const response = await analyzeWithLLM(userQuery, processedData);
    
    await ctx.reply(response, { parse_mode: "HTML" });

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞:", error);
    await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.");
  }
}



/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å —Å –ø–æ–º–æ—â—å—é LLM
 */
async function analyzeWithLLM(userQuery: string, processedData: any): Promise<string> {
  console.log("üß† –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ LLM...");

  try {
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è LLM
    const context = formatDataForLLM(processedData, userQuery);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ LLM
    const response = await geminiService.enhanceResponse([{ context }], "data_analysis", userQuery);

    if (response) {
      console.log("‚úÖ LLM –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ");
      return response;
    } else {
      console.log("‚ö†Ô∏è LLM –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, fallback");
      return "‚ùå LLM —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
    }

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ LLM:", error);
    return "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
  }
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è LLM
 */
function formatDataForLLM(processedData: any, userQuery: string): string {
  let context = `–í–û–ü–†–û–°: "${userQuery}"\n`;
  context += `–°–ï–ì–û–î–ù–Ø: ${new Date().toISOString().split('T')[0]}\n`;
  context += `–ê–ù–ê–õ–ò–ó–ò–†–£–ï–ú–´–ô –ü–ï–†–ò–û–î: ${processedData.summary.dateRange}\n\n`;

  // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π –ø–µ—Ä–∏–æ–¥
  context += `üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó–ê –ü–ï–†–ò–û–î "${processedData.summary.dateRange.toUpperCase()}":\n`;
  context += `‚Ä¢ –í—Å–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: ${processedData.summary.totalUsers}\n`;
  context += `‚Ä¢ –ó–∞–¥–∞—á –∑–∞ –ø–µ—Ä–∏–æ–¥: ${processedData.summary.totalTasks}\n`;
  context += `‚Ä¢ –ó–∞–ø–∏—Å–µ–π –≤—Ä–µ–º–µ–Ω–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥: ${processedData.summary.totalTimeEntries}\n`;
  context += `‚Ä¢ –ü—Ä–æ–µ–∫—Ç–æ–≤: ${processedData.summary.totalProjects}\n\n`;

  context += `‚ö†Ô∏è –í–ê–ñ–ù–û: –î–∞–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –∑–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π –ø–µ—Ä–∏–æ–¥!\n\n`;

  // –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
  if (processedData.employees.length > 0) {
    context += `üë• –î–ï–¢–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ü–û –°–û–¢–†–£–î–ù–ò–ö–ê–ú:\n`;
    processedData.employees.forEach((emp: any) => {
      context += `\nüìã ${emp.name}:\n`;
      context += `‚Ä¢ –í—Å–µ–≥–æ –∑–∞–¥–∞—á: ${emp.taskCount}\n`;
      context += `‚Ä¢ –û–±—â–µ–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${emp.totalHours.toFixed(1)} —á–∞—Å–æ–≤\n`;

      if (emp.workTypes.length > 0) {
        context += `‚Ä¢ –¢–∏–ø—ã —Ä–∞–±–æ—Ç: ${emp.workTypes.join(', ')}\n`;
      }

      if (emp.projects.length > 0) {
        context += `‚Ä¢ –ü—Ä–æ–µ–∫—Ç—ã: ${emp.projects.join(', ')}\n`;
      }

      if (emp.allTasks.length > 0) {
        context += `‚Ä¢ –ó–∞–¥–∞—á–∏:\n`;
        emp.allTasks.forEach((task: any, index: number) => {
          context += `  ${index + 1}. ${task.title} (${task.hours}—á, ${task.date}, ${task.status})\n`;
          if (task.description && task.description !== task.title) {
            context += `     ${task.description}\n`;
          }
        });
      }

      if (emp.timeEntries.length > 0) {
        context += `‚Ä¢ –ó–∞–ø–∏—Å–∏ –≤—Ä–µ–º–µ–Ω–∏:\n`;
        emp.timeEntries.forEach((entry: any, index: number) => {
          context += `  ${index + 1}. ${entry.date}: ${entry.hours}—á - ${entry.description}\n`;
          if (entry.workType) {
            context += `     –¢–∏–ø —Ä–∞–±–æ—Ç—ã: ${entry.workType}\n`;
          }
        });
      }
    });
    context += `\n`;
  }

  // –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –ø–µ—Ä–∏–æ–¥
  if (processedData.recentActivity.length > 0) {
    context += `‚è∞ –ê–ö–¢–ò–í–ù–û–°–¢–¨ –ó–ê –ü–ï–†–ò–û–î:\n`;

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –¥–Ω—è–º –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const activityByDate = new Map();
    processedData.recentActivity.forEach((activity: any) => {
      if (!activityByDate.has(activity.date)) {
        activityByDate.set(activity.date, []);
      }
      activityByDate.get(activity.date).push(activity);
    });

    // –í—ã–≤–æ–¥–∏–º –ø–æ –¥–Ω—è–º
    Array.from(activityByDate.entries())
      .sort(([a], [b]) => b.localeCompare(a)) // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞)
      .slice(0, 10) // –ú–∞–∫—Å–∏–º—É–º 10 –¥–Ω–µ–π
      .forEach(([date, activities]) => {
        context += `\nüìÖ ${date}:\n`;
        activities.forEach((activity: any, index: number) => {
          const taskNumber = index + 1;
          context += `  ${taskNumber}. ${activity.hours}—á - ${activity.description}\n`;
        });

        const totalHours = activities.reduce((sum: number, a: any) => sum + a.hours, 0);
        context += `  üìä –ò—Ç–æ–≥–æ –∑–∞ –¥–µ–Ω—å: ${totalHours}—á\n`;
      });

    context += `\n`;
  }

  // –¢–æ–ø –∑–∞–¥–∞—á –ø–æ –≤—Ä–µ–º–µ–Ω–∏
  if (processedData.topTasks.length > 0) {
    context += `üî• –¢–û–ü –ó–ê–î–ê–ß –ü–û –í–†–ï–ú–ï–ù–ò:\n`;
    processedData.topTasks.slice(0, 10).forEach((task: any, index: number) => {
      context += `${index + 1}. ${task.title} - ${task.hours.toFixed(1)}—á (${task.employee})\n`;
    });
    context += `\n`;
  }

  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Å—Ä–æ—á–∫–µ
  if (processedData.overdueInfo) {
    context += `‚ö†Ô∏è –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–†–û–°–†–û–ß–ö–ï:\n`;
    context += `‚Ä¢ –°–æ—Ç—Ä—É–¥–Ω–∏–∫: ${processedData.overdueInfo.employeeName}\n`;
    context += `‚Ä¢ –°—Ç–∞—Ç—É—Å: ${processedData.overdueInfo.hasOverdue ? '‚ùå –ï—Å—Ç—å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏' : '‚úÖ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –Ω–µ—Ç'}\n`;
    context += `‚Ä¢ –î–µ—Ç–∞–ª–∏: ${processedData.overdueInfo.details}\n\n`;
  }

  context += `\nüí° –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê:\n`;
  context += `‚Ä¢ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã –ø–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–æ–º—É –ø–µ—Ä–∏–æ–¥—É: ${processedData.summary.dateRange}\n`;
  context += `‚Ä¢ –í–ê–ñ–ù–û: –í –æ—Ç–≤–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π –¢–û–ß–ù–û —Ç–æ—Ç –∂–µ –ø–µ—Ä–∏–æ–¥, —á—Ç–æ —É–∫–∞–∑–∞–Ω –≤ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n`;
  context += `‚Ä¢ –ù–ï –º–µ–Ω—è–π –≥–æ–¥ –∏–ª–∏ –º–µ—Å—è—Ü –≤ –æ—Ç–≤–µ—Ç–µ - –∏—Å–ø–æ–ª—å–∑—É–π –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞\n`;
  context += `‚Ä¢ –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥\n`;
  context += `‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –∏ —Ñ–∞–∫—Ç—ã –∏–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n`;
  context += `‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç: –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ‚Üí –¥–µ—Ç–∞–ª–∏ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º ‚Üí –≤—ã–≤–æ–¥—ã\n`;
  context += `‚Ä¢ –í–º–µ—Å—Ç–æ "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∑–∞–¥–∞—á–∞" –∏—Å–ø–æ–ª—å–∑—É–π "–ó–∞–¥–∞—á–∞ ‚Ññ1", "–ó–∞–¥–∞—á–∞ ‚Ññ2" –∏ —Ç.–¥.\n`;
  context += `‚Ä¢ –ï—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Å—Ä–æ—á–∫–µ - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∏ –µ—ë –≤ –æ—Ç–≤–µ—Ç\n`;
  context += `‚Ä¢ –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥ –Ω–µ—Ç - —á–µ—Å—Ç–Ω–æ –æ–± —ç—Ç–æ–º —Å–∫–∞–∂–∏\n`;
  context += `‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π HTML —Ä–∞–∑–º–µ—Ç–∫—É –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞\n`;

  return context;
}
