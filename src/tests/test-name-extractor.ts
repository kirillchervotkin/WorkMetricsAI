import { NameExtractor } from '../services/NameExtractor';

async function testNameExtractor() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ NameExtractor');
  console.log('=' .repeat(40));

  const extractor = new NameExtractor();

  const testCases = [
    {
      query: "–ß—Ç–æ –¥–µ–ª–∞–ª –ö–∏—Ä–∏–ª–ª —á–µ—Ä–≤–æ—Ç–∫–∏–Ω –≤—á–µ—Ä–∞?",
      expected: "–ö–∏—Ä–∏–ª–ª"
    },
    {
      query: "–ó–∞–¥–∞—á–∏ –ó–æ–ª–æ—Ç–∞—Ä–µ–≤–∞",
      expected: "–ó–æ–ª–æ—Ç–∞—Ä–µ–≤–∞"
    },
    {
      query: "–°–∫–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–∞–ª –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤?",
      expected: "–ò–≤–∞–Ω"
    },
    {
      query: "–ß–µ—Ä–≤–æ—Ç–∫–∏–Ω –ö–∏—Ä–∏–ª–ª –°–µ—Ä–≥–µ–µ–≤–∏—á —Ä–∞–±–æ—Ç–∞–ª –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º",
      expected: "–ß–µ—Ä–≤–æ—Ç–∫–∏–Ω"
    },
    {
      query: "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
      expected: null
    },
    {
      query: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º",
      expected: null
    },
    {
      query: "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–º–∞–Ω–¥–∞?",
      expected: null
    }
  ];

  for (const testCase of testCases) {
    console.log(`\nüîç –¢–µ—Å—Ç: "${testCase.query}"`);
    
    const result = extractor.extractEmployeeNameSimple(testCase.query);
    
    if (result === testCase.expected) {
      console.log(`‚úÖ –£—Å–ø–µ—Ö: "${result}"`);
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞: –æ–∂–∏–¥–∞–ª–∏ "${testCase.expected}", –ø–æ–ª—É—á–∏–ª–∏ "${result}"`);
    }
  }

  console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
}

if (require.main === module) {
  testNameExtractor().catch(console.error);
}

export { testNameExtractor };
